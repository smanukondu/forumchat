<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wiz.jspforum.persistence.basic.data.myBatis.mapper.FriendMapper">
	<sql id="friendJointRequestColumns">
		<![CDATA[
			a.FRIEND_JOINT_REQUEST_ID as friendJointRequestId, 
			a.FRIEND_JOINT_REQUEST_REMARK as friendJointRequestRemark, 
			a.FRIEND_JOINT_REQUEST_DATE as friendJointRequestDate, 
			a.FRIEND_JOINT_REQUEST_STATUS as friendJointRequestStatus, 
			a.FRIEND_JOINT_REQUEST_FROM_USER_ID, 
			a.FRIEND_JOINT_REQUEST_TO_USER_ID, 
			b.USER_ID as from_userId, 
			b.USER_NAME as from_userName, 
			b.USER_PASSWORD as from_userPassword, 
			b.USER_ALIAS as from_userAlias, 
			b.USER_EMAIL as from_userEmail, 
			b.USER_TYPE as from_userType, 
			b.USER_LEVEL as from_userLevel, 
			b.USER_SIGNATURE as from_userSignature, 
			b.USER_AVATAR_PIC as from_userAvatarPic, 
			b.USER_REGISTER_DATE as from_userRegisterDate, 
			b.USER_LOGIN_STATUS as from_userLoginStatus, 
			c.USER_ID as to_userId, 
			c.USER_NAME as to_userName, 
			c.USER_PASSWORD as to_userPassword, 
			c.USER_ALIAS as to_userAlias, 
			c.USER_EMAIL as to_userEmail, 
			c.USER_TYPE as to_userType, 
			c.USER_LEVEL as to_userLevel, 
			c.USER_SIGNATURE as to_userSignature, 
			c.USER_AVATAR_PIC as to_userAvatarPic, 
			c.USER_REGISTER_DATE as to_userRegisterDate, 
			c.USER_LOGIN_STATUS as to_userLoginStatus 
		]]>
	</sql>
	<resultMap id="detailedFriendJointRequestResultMap" type="FriendJointRequest">
		<id property="friendJointRequestId" column="friendJointRequestId"/>
		<result property="friendJointRequestRemark" column="friendJointRequestRemark"/>
		<result property="friendJointRequestDate" column="friendJointRequestDate"/>
		<result property="friendJointRequestStatus" column="friendJointRequestStatus"/>
		<result property="friendJointRequestFromUserUserId" column="FRIEND_JOINT_REQUEST_FROM_USER_ID"/>
		<result property="friendJointRequestToUserUserId" column="FRIEND_JOINT_REQUEST_TO_USER_ID"/>
		<association property="friendJointRequestFromUser" javaType="UserProfile" 
			resultMap="com.wiz.jspforum.persistence.basic.data.myBatis.mapper.UserMapper.detailedUserProfileResultMap" 
			columnPrefix="from_"/>
		<association property="friendJointRequestToUser" javaType="UserProfile" 
			resultMap="com.wiz.jspforum.persistence.basic.data.myBatis.mapper.UserMapper.detailedUserProfileResultMap" 
			columnPrefix="to_"/>
	</resultMap>
	<select id="getFriendJointRequestRecordsByToUserId" parameterType="int" resultMap="detailedFriendJointRequestResultMap">
		<![CDATA[
			select 
		]]>
			<include refid="friendJointRequestColumns"/>
		<![CDATA[
			from 
				FORUM_FRIEND_JOINT_REQUEST a 
				inner join FORUM_USER_PROFILE b on a.FRIEND_JOINT_REQUEST_FROM_USER_ID = b.USER_ID 
				inner join FORUM_USER_PROFILE c on a.FRIEND_JOINT_REQUEST_TO_USER_ID = c.USER_ID 
			where 
				a.FRIEND_JOINT_REQUEST_TO_USER_ID = #{userId} 
				and a.FRIEND_JOINT_REQUEST_STATUS = 'Pending' 
			order by 
				a.FRIEND_JOINT_REQUEST_DATE desc
		]]>
	</select>
	<insert id="insertFriendJointRequestRecord" parameterType="FriendJointRequest">
		<![CDATA[
			insert into FORUM_FRIEND_JOINT_REQUEST 
				(FRIEND_JOINT_REQUEST_FROM_USER_ID, 
				 FRIEND_JOINT_REQUEST_TO_USER_ID, 
				 FRIEND_JOINT_REQUEST_REMARK, 
				 FRIEND_JOINT_REQUEST_DATE, 
				 FRIEND_JOINT_REQUEST_STATUS) 
			values 
				(#{friendJointRequestFromUser.userId}, 
				 #{friendJointRequestToUser.userId}, 
				 #{friendJointRequestRemark}, 
				 #{friendJointRequestDate}, 
				 #{friendJointRequestStatus}) 
		]]>
	</insert>
	<update id="updateFriendJointRequestRecordForRequestStatus" parameterType="FriendJointRequest">
		<![CDATA[
			update FORUM_FRIEND_JOINT_REQUEST set 
				FRIEND_JOINT_REQUEST_STATUS = #{friendJointRequestStatus} 
			where 
				FRIEND_JOINT_REQUEST_ID = #{friendJointRequestId} 
		]]>
	</update>
	<select id="getFriendJointRequestRecordBetweenUsersWithStatus" resultMap="detailedFriendJointRequestResultMap">
		<![CDATA[
			select 
		]]>
			<include refid="friendJointRequestColumns"/>
		<![CDATA[
			from 
				FORUM_FRIEND_JOINT_REQUEST a 
				inner join FORUM_USER_PROFILE b on a.FRIEND_JOINT_REQUEST_FROM_USER_ID = b.USER_ID 
				inner join FORUM_USER_PROFILE c on a.FRIEND_JOINT_REQUEST_TO_USER_ID = c.USER_ID 
			where 
				a.FRIEND_JOINT_REQUEST_FROM_USER_ID = #{fromUserId} 
				and a.FRIEND_JOINT_REQUEST_TO_USER_ID = #{toUserId} 
				and a.FRIEND_JOINT_REQUEST_STATUS = #{status} 
			order by 
				a.FRIEND_JOINT_REQUEST_DATE desc
		]]>
	</select>
	<select id="getFriendJointRequestRecordByFriendRequestId" parameterType="int" resultMap="detailedFriendJointRequestResultMap">
		<![CDATA[
			select 
		]]>
			<include refid="friendJointRequestColumns"/>
		<![CDATA[
			from 
				FORUM_FRIEND_JOINT_REQUEST a 
				inner join FORUM_USER_PROFILE b on a.FRIEND_JOINT_REQUEST_FROM_USER_ID = b.USER_ID 
				inner join FORUM_USER_PROFILE c on a.FRIEND_JOINT_REQUEST_TO_USER_ID = c.USER_ID 
			where 
				a.FRIEND_JOINT_REQUEST_ID = #{friendJointRequestId} 
			order by 
				a.FRIEND_JOINT_REQUEST_DATE desc
		]]>
	</select>
	<sql id="friendLinkColumns">
		<![CDATA[
			a.FRIEND_LINK_ID as friendLinkId, 
			a.FRIEND_LINK_MAP_DATE as friendLinkMappedDate, 
			a.FRIEND_LINK_HOST_USER_ID, 
			a.FRIEND_LINK_CUST_USER_ID, 
			b.USER_ID as host_userId, 
			b.USER_NAME as host_userName, 
			b.USER_PASSWORD as host_userPassword, 
			b.USER_ALIAS as host_userAlias, 
			b.USER_EMAIL as host_userEmail, 
			b.USER_TYPE as host_userType, 
			b.USER_LEVEL as host_userLevel, 
			b.USER_SIGNATURE as host_userSignature, 
			b.USER_AVATAR_PIC as host_userAvatarPic, 
			b.USER_REGISTER_DATE as host_userRegisterDate, 
			b.USER_LOGIN_STATUS as host_userLoginStatus, 
			c.USER_ID as cust_userId, 
			c.USER_NAME as cust_userName, 
			c.USER_PASSWORD as cust_userPassword, 
			c.USER_ALIAS as cust_userAlias, 
			c.USER_EMAIL as cust_userEmail, 
			c.USER_TYPE as cust_userType, 
			c.USER_LEVEL as cust_userLevel, 
			c.USER_SIGNATURE as cust_userSignature, 
			c.USER_AVATAR_PIC as cust_userAvatarPic, 
			c.USER_REGISTER_DATE as cust_userRegisterDate, 
			c.USER_LOGIN_STATUS as cust_userLoginStatus 
		]]>
	</sql>
	<resultMap id="detailedFriendLinkResultMap" type="FriendLink">
		<id property="friendLinkId" column="friendLinkId"/>
		<result property="friendLinkMappedDate" column="friendLinkMappedDate"/>
		<association property="friendLinkHostUser" javaType="UserProfile" 
			resultMap="com.wiz.jspforum.persistence.basic.data.myBatis.mapper.UserMapper.detailedUserProfileResultMap" 
			columnPrefix="host_"/>
		<association property="friendLinkCustUser" javaType="UserProfile" 
			resultMap="com.wiz.jspforum.persistence.basic.data.myBatis.mapper.UserMapper.detailedUserProfileResultMap" 
			columnPrefix="cust_"/>
	</resultMap>
	<select id="getFriendLinkRecordsByHostUserId" parameterType="int" resultMap="detailedFriendLinkResultMap">
		<![CDATA[
			select 
		]]>
			<include refid="friendLinkColumns"/>
		<![CDATA[
			from 
				FORUM_FRIEND_LINK a 
				inner join FORUM_USER_PROFILE b on a.FRIEND_LINK_HOST_USER_ID = b.USER_ID 
				inner join FORUM_USER_PROFILE c on a.FRIEND_LINK_CUST_USER_ID = c.USER_ID 
			where 
				a.FRIEND_LINK_HOST_USER_ID = #{hostUserId} 
		]]>
	</select>
	<select id="getFriendLinkRecordBetweenUsers" resultMap="detailedFriendLinkResultMap">
		<![CDATA[
			select 
		]]>
			<include refid="friendLinkColumns"/>
		<![CDATA[
			from 
				FORUM_FRIEND_LINK a 
				inner join FORUM_USER_PROFILE b on a.FRIEND_LINK_HOST_USER_ID = b.USER_ID 
				inner join FORUM_USER_PROFILE c on a.FRIEND_LINK_CUST_USER_ID = c.USER_ID 
			where 
				a.FRIEND_LINK_HOST_USER_ID = #{hostUserId} 
				and a.FRIEND_LINK_CUST_USER_ID = #{custUserId} 
		]]>
	</select>
	<insert id="insertFriendLinkRecord" parameterType="FriendLink">
		<![CDATA[
			insert into FORUM_FRIEND_LINK 
				(FRIEND_LINK_MAP_DATE, 
				 FRIEND_LINK_HOST_USER_ID, 
				 FRIEND_LINK_CUST_USER_ID) 
			values 
				(#{friendLinkMappedDate}, 
				 #{friendLinkHostUser.userId}, 
				 #{friendLinkCustUser.userId}) 
		]]>
	</insert>
	<delete id="deleteFriendLinkRecord" parameterType="FriendLink">
		<![CDATA[
			delete from 
				FORUM_FRIEND_LINK 
			where 
				FRIEND_LINK_HOST_USER_ID = #{friendLinkHostUser.userId} 
				and FRIEND_LINK_CUST_USER_ID = #{friendLinkCustUser.userId} 
		]]>
	</delete>
	
</mapper>